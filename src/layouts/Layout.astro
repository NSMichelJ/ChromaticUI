---
import { ModeToggle } from "@/components/ModeToggle";
import { Toaster } from "@/components/ui/sonner";
import "@/styles/globals.css";
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>ChromaticUI | Colors generator</title>
  </head>
  <body class="bg-gray-50 dark:bg-gray-900">
    <div class="fixed -z-10 h-full w-full bg-transparent">
      <div
        class="absolute h-full w-full bg-[radial-gradient(#dcdcdc_1px,transparent_1px)] dark:bg-[radial-gradient(#172235_1px,transparent_1px)] [background-size:16px_16px] [mask-image:radial-gradient(ellipse_50%_50%_at_50%_50%,#000_70%,transparent_100%)]"
      >
      </div>
    </div>

    <header
      class="fixed top-0 left-0 z-50 w-full border-b bg-gray-50 border-gray-200 dark:bg-gray-900 dark:border-gray-800"
    >
      <div
        class="flex items-center justify-between w-full max-w-7xl m-auto px-2 py-4"
      >
        <span class="text-gray-900 dark:text-gray-100 font-bold text-2xl">
          ChromaticUI
        </span>
        <ModeToggle client:load />
      </div>
    </header>

    <div class="pt-[68px]">
      <slot />
    </div>

    <Toaster position="top-center" client:load />
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
    font-family: sans-serif;
  }
</style>

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>
